# created by the factor : Dec 7, 2023, 4:03:00 PM  
####
# This Dockerfile is used in order to build a container that runs the Quarkus application in native (no JVM) mode.
#
#
# NOTE:
# 1. [error]: exec ./application: exec format error
#    [solution]:https://stackoverflow.com/questions/71332558/quarkus-docker-run-exec-user-process-caused-exec-format-error
# 2. Always check the .dockerignore, if has issues on 'not found' or 'not included' during docker build
# 3. Make sure version compatibility between quarkus version and graalvm version, quarkus version and graalvm-ce version must compatible, For Quarkus 2.9.2, the compatible version of GraalVM is 21.3.0. Please note that the compatibility between Quarkus and GraalVM can vary with different versions 
# 4. Recheck again the version of 'ubi-quarkus-mandrel-builder-image:21.3-java11' on https://quay.io/repository/quarkus/ubi-quarkus-mandrel-builder-image?tab=tags
# 5. quay.io/quarkus/quarkus-micro-image:2.0 can be replaced by registry.access.redhat.com/ubi8/ubi-minimal:8.6
# 6. upgrade image ubi-quarkus-mandrel-builder-image:  21.3-java11 ==> 23.1.1.0-Final-java21

###
#1# Stage 1: Install
FROM quay.io/quarkus/ubi-quarkus-mandrel-builder-image:23.1.1.0-Final-java21 AS install

# Set the build directory
WORKDIR /code

# Copy only the POM files and run dependency download, to cache dependencies
COPY --chown=quarkus:quarkus mvnw /code/mvnw
COPY --chown=quarkus:quarkus .mvn /code/.mvn
COPY --chown=quarkus:quarkus pom.xml /code/
USER quarkus
RUN ./mvnw -B org.apache.maven.plugins:maven-dependency-plugin:3.1.2:go-offline

# Copy the source code
COPY src /code/src

#2# Stage 2: Unit Testing
FROM install AS test

# Run unit tests
RUN ./mvnw test


#3# Stage 3: sonarcloud 
FROM test AS sonarcloud

# inspect the code using sonarcloud
RUN ./mvnw clean verify sonar:sonar -Dsonar.token=c8f07b8da132920eac5e3c9b92b34224739710d2 -DskipTests

#4# Stage 4: Packaging
FROM sonarcloud AS package

# Build the native application
RUN ./mvnw package -Pnative -DskipTests

#5# Stage 5 : create the docker final image
FROM quay.io/quarkus/quarkus-micro-image:2.0 AS native
WORKDIR /work/
COPY --from=package /code/target/*-runner /work/application

# set up permissions for user `1001`
RUN chmod 775 /work /work/application \
  && chown -R 1001 /work \
  && chmod -R "g+rwX" /work \
  && chown -R 1001:root /work

EXPOSE 8080
USER 1001

CMD ["./application", "-Dquarkus.http.host=0.0.0.0"]
